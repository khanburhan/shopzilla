[{"/home/bc0der11/Documents/Programming/shopzilla/src/index.js":"1","/home/bc0der11/Documents/Programming/shopzilla/src/App.js":"2","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Products.jsx":"3","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/Product.jsx":"4","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/styles.js":"5","/home/bc0der11/Documents/Programming/shopzilla/src/components/index.js":"6","/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/Navbar.jsx":"7","/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/styles.js":"8","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/styles.js":"9","/home/bc0der11/Documents/Programming/shopzilla/src/lib/commerce.js":"10","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/Cart.jsx":"11","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/styles.js":"12","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/CartItem.jsx":"13","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/styles.js":"14","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/styles.js":"16","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/AddressForm.jsx":"17","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/PaymentForm.jsx":"18","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/CustomTextField.jsx":"19","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Review.jsx":"20"},{"size":147,"mtime":1609003365505,"results":"21","hashOfConfig":"22"},{"size":2946,"mtime":1609060482357,"results":"23","hashOfConfig":"22"},{"size":687,"mtime":1609064001290,"results":"24","hashOfConfig":"22"},{"size":1329,"mtime":1609064268616,"results":"25","hashOfConfig":"22"},{"size":396,"mtime":1609063842792,"results":"26","hashOfConfig":"22"},{"size":231,"mtime":1609009273206,"results":"27","hashOfConfig":"22"},{"size":2745,"mtime":1609064921685,"results":"28","hashOfConfig":"22"},{"size":1499,"mtime":1609065399593,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1609061045245,"results":"30","hashOfConfig":"22"},{"size":132,"mtime":1608967088980,"results":"31","hashOfConfig":"22"},{"size":2156,"mtime":1609064428862,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1609060609907,"results":"33","hashOfConfig":"22"},{"size":1678,"mtime":1609063396112,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1609063498844,"results":"35","hashOfConfig":"22"},{"size":3472,"mtime":1609060888178,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1609060931506,"results":"37","hashOfConfig":"22"},{"size":5269,"mtime":1609060694338,"results":"38","hashOfConfig":"22"},{"size":2720,"mtime":1609060809164,"results":"39","hashOfConfig":"22"},{"size":533,"mtime":1609060784277,"results":"40","hashOfConfig":"22"},{"size":961,"mtime":1609060859415,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"uri0gb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/bc0der11/Documents/Programming/shopzilla/src/index.js",[],["85","86"],"/home/bc0der11/Documents/Programming/shopzilla/src/App.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Products.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/Product.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/index.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/Navbar.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/lib/commerce.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/Cart.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/CartItem.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/Checkout.jsx",["87"],"import React, { useState, useEffect } from \"react\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { commerce } from \"../../../lib/commerce\";\nimport AddressForm from \"../AddressForm\";\nimport PaymentForm from \"../PaymentForm\";\nimport useStyles from \"./styles\";\n\nconst steps = [\"Shipping address\", \"Payment details\"];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, {\n            type: \"cart\",\n          });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push(\"/\");\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () =>\n    order.customer ? (\n      <>\n        <div>\n          <Typography variant=\"h5\">\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\n            {order.customer.lastname}!\n          </Typography>\n          <Divider className={classes.divider} />\n          <Typography variant=\"subtitle2\">\n            Order ref: {order.customer_reference}\n          </Typography>\n        </div>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    ) : (\n      <div className={classes.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    );\n  }\n  const Form = () =>\n    activeStep === 0 ? (\n      <AddressForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        setShippingData={setShippingData}\n        test={test}\n      />\n    ) : (\n      <PaymentForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        backStep={backStep}\n        shippingData={shippingData}\n        onCaptureCheckout={onCaptureCheckout}\n      />\n    );\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <Confirmation />\n          ) : (\n            checkoutToken && <Form />\n          )}\n        </Paper>\n      </main>\n    </>\n  );\n};\nexport default Checkout;\n","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/AddressForm.jsx",["88","89"],"import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\nimport { commerce } from \"../../lib/commerce\";\nimport FormInput from \"./CustomTextField\";\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    stateProvince = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region: stateProvince }\n    );\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            test({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {Object.entries(shippingCountries)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {Object.entries(shippingSubdivisions)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {shippingOptions\n                  .map((sO) => ({\n                    id: sO.id,\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n                  }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;\n","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/PaymentForm.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/CustomTextField.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":48,"column":6,"nodeType":"96","endLine":48,"endColumn":12,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":59,"column":6,"nodeType":"96","endLine":59,"endColumn":8,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":72,"column":6,"nodeType":"96","endLine":72,"endColumn":27,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"113","text":"114"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"115","text":"116"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"117","text":"118"},[1315,1321],"[activeStep, cart, history]",[1739,1741],"[checkoutToken.id]",[2022,2043],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]