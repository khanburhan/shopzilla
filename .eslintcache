[{"/home/bc0der11/Documents/Programming/shopzilla/src/index.js":"1","/home/bc0der11/Documents/Programming/shopzilla/src/App.js":"2","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Products.jsx":"3","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/Product.jsx":"4","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/styles.js":"5","/home/bc0der11/Documents/Programming/shopzilla/src/components/index.js":"6","/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/Navbar.jsx":"7","/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/styles.js":"8","/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/styles.js":"9","/home/bc0der11/Documents/Programming/shopzilla/src/lib/commerce.js":"10","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/Cart.jsx":"11","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/styles.js":"12","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/CartItem.jsx":"13","/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/styles.js":"14","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/styles.js":"16","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/AddressForm.jsx":"17","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/PaymentForm.jsx":"18","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/CustomTextField.jsx":"19","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Review.jsx":"20"},{"size":147,"mtime":1609003365505,"results":"21","hashOfConfig":"22"},{"size":2946,"mtime":1609060482357,"results":"23","hashOfConfig":"22"},{"size":687,"mtime":1609086829106,"results":"24","hashOfConfig":"22"},{"size":1411,"mtime":1609086748740,"results":"25","hashOfConfig":"22"},{"size":638,"mtime":1609086789252,"results":"26","hashOfConfig":"22"},{"size":231,"mtime":1609009273206,"results":"27","hashOfConfig":"22"},{"size":6030,"mtime":1609085373380,"results":"28","hashOfConfig":"22"},{"size":2042,"mtime":1609090915808,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1609061045245,"results":"30","hashOfConfig":"22"},{"size":132,"mtime":1608967088980,"results":"31","hashOfConfig":"22"},{"size":2156,"mtime":1609064428862,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1609060609907,"results":"33","hashOfConfig":"22"},{"size":1678,"mtime":1609063396112,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1609063498844,"results":"35","hashOfConfig":"22"},{"size":3472,"mtime":1609060888178,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1609060931506,"results":"37","hashOfConfig":"22"},{"size":5269,"mtime":1609060694338,"results":"38","hashOfConfig":"22"},{"size":2720,"mtime":1609060809164,"results":"39","hashOfConfig":"22"},{"size":533,"mtime":1609060784277,"results":"40","hashOfConfig":"22"},{"size":961,"mtime":1609060859415,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"uri0gb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/bc0der11/Documents/Programming/shopzilla/src/index.js",[],["86","87"],"/home/bc0der11/Documents/Programming/shopzilla/src/App.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Products.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/Product.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/Product/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/index.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/Navbar.jsx",["88","89","90"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Badge,\n  MenuItem,\n  Menu,\n  Typography,\n} from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nimport logo from \"../../assets/commerce.png\";\nimport useStyles from \"./styles\";\n\nconst PrimarySearchAppBar = ({ totalItems }, props) => {\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n  const classes = useStyles();\n  const location = useLocation();\n  const { window } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => setMobileMoreAnchorEl(null);\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {[\"Categories\", \"Cart\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <CategoryIcon /> : <ShoppingCartIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"Order History\", \"Favourites\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <HistoryIcon /> : <FavoriteIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"Account\", \"About\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <AccountBoxIcon /> : <InfoIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton\n          component={Link}\n          to=\"/cart\"\n          aria-label=\"Show cart items\"\n          color=\"inherit\"\n        >\n          <Badge badgeContent={totalItems} color=\"secondary\">\n            <ShoppingCart />\n          </Badge>\n        </IconButton>\n        <p>Cart</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component={Link}\n            to=\"/\"\n            variant=\"h6\"\n            className={classes.title}\n            color=\"inherit\"\n          >\n            <img\n              src={logo}\n              alt=\"shopzilla\"\n              height=\"25px\"\n              className={classes.image}\n            />{\" \"}\n            ShopZilla\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === \"/\" && (\n            <div className={`${classes.button} ${classes.cartIcon}`}>\n              <IconButton\n                component={Link}\n                to=\"/cart\"\n                aria-label=\"Show cart items\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={totalItems} color=\"secondary\">\n                  <ShoppingCart />\n                </Badge>\n              </IconButton>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={\"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      {renderMobileMenu}\n    </>\n  );\n};\nexport default PrimarySearchAppBar;\n","/home/bc0der11/Documents/Programming/shopzilla/src/components/Navbar/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Products/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/lib/commerce.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/Cart.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/CartItem.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/Cart/CartItem/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/Checkout.jsx",["91"],"import React, { useState, useEffect } from \"react\";\nimport {\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { commerce } from \"../../../lib/commerce\";\nimport AddressForm from \"../AddressForm\";\nimport PaymentForm from \"../PaymentForm\";\nimport useStyles from \"./styles\";\n\nconst steps = [\"Shipping address\", \"Payment details\"];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, {\n            type: \"cart\",\n          });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push(\"/\");\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () =>\n    order.customer ? (\n      <>\n        <div>\n          <Typography variant=\"h5\">\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\n            {order.customer.lastname}!\n          </Typography>\n          <Divider className={classes.divider} />\n          <Typography variant=\"subtitle2\">\n            Order ref: {order.customer_reference}\n          </Typography>\n        </div>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    ) : (\n      <div className={classes.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\n          Back to home\n        </Button>\n      </>\n    );\n  }\n  const Form = () =>\n    activeStep === 0 ? (\n      <AddressForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        setShippingData={setShippingData}\n        test={test}\n      />\n    ) : (\n      <PaymentForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        backStep={backStep}\n        shippingData={shippingData}\n        onCaptureCheckout={onCaptureCheckout}\n      />\n    );\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <Confirmation />\n          ) : (\n            checkoutToken && <Form />\n          )}\n        </Paper>\n      </main>\n    </>\n  );\n};\nexport default Checkout;\n","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Checkout/styles.js",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/AddressForm.jsx",["92","93"],"import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\nimport { commerce } from \"../../lib/commerce\";\nimport FormInput from \"./CustomTextField\";\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    stateProvince = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region: stateProvince }\n    );\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            test({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {Object.entries(shippingCountries)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {Object.entries(shippingSubdivisions)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {shippingOptions\n                  .map((sO) => ({\n                    id: sO.id,\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n                  }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;\n","/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/PaymentForm.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/CustomTextField.jsx",[],"/home/bc0der11/Documents/Programming/shopzilla/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":22,"column":8,"nodeType":"100","messageId":"101","endLine":22,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":23,"column":8,"nodeType":"100","messageId":"101","endLine":23,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":48,"column":6,"nodeType":"106","endLine":48,"endColumn":12,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":59,"column":6,"nodeType":"106","endLine":59,"endColumn":8,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":72,"column":6,"nodeType":"106","endLine":72,"endColumn":27,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"125","text":"126"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"127","text":"128"},[1315,1321],"[activeStep, cart, history]",[1739,1741],"[checkoutToken.id]",[2022,2043],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]